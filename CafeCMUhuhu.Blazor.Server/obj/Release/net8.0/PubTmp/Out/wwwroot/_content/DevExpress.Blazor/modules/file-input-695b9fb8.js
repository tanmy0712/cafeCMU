import{i as e,g as t,U as s,F as o,t as i}from"./upload-base-7fd10b87.js";import"./_tslib-6e8ca86b.js";import"./dom-da46d023.js";import"./browser-d96520d8.js";import"./common-f853e871.js";import"./custom-events-helper-e7f279d3.js";import"./single-slot-element-base-9e7a4622.js";import"./data-qa-utils-8be7c726.js";import"./const-90026e45.js";import"./dx-ui-element-822e6c84.js";import"./lit-element-base-32a69cc0.js";import"./dx-license-dd341102.js";import"./lit-element-462e7ad3.js";import"./logicaltreehelper-7b19cc30.js";import"./layouthelper-0c7c89da.js";import"./point-e4ec110e.js";import"./constants-791d6f9b.js";import"./property-4ec0b52d.js";import"./css-classes-cee8476c.js";class l extends s{processUploadedFilesOptionsCore(e){var t;const s=e.filter((e=>e.status===o.PendingUpload&&e.uploadStartOptions));for(const e of s){const t=this.files.get(e.fileGuid);t&&(this.attachEventsToFileItem(t),t.loadStart())}const i=s.map((e=>e.fileGuid));i.length&&(null===(t=this.dotnetHelper)||void 0===t||t.invokeMethodAsync("UploadFileViaJsInterop",i))}}customElements.define("dxbl-file-input",l);const a={loadModule:function(){},initDotNetReference:e,getFileBytes:function(e,t){var s,o;return null===(o=null===(s=i(e))||void 0===s?void 0:s.getFileBytes)||void 0===o?void 0:o.call(s,t)},updateFileStatus:function(e,t,s,o){var l;null===(l=i(e))||void 0===l||l.updateFileStatus(t,s,o)},getRecentlyAddedFileInfosStream:t};export{l as DxFileInput,a as default};
