import{d as e,o as t,r as s,e as r,a as o,g as i,c as a,b as n,s as d,i as c,f as p,h as l,P as m,L as g}from"./baseChart-d9b79817.js";import{h}from"./tooltip-30e59f64.js";import"./dom-utils-c35907a1.js";import"./dom-da46d023.js";import"./browser-d96520d8.js";import"./common-f853e871.js";import"./_tslib-6e8ca86b.js";import"./css-classes-cee8476c.js";import"./disposable-d2c2d283.js";import"./dx-license-dd341102.js";import"./custom-theme-generator-9dcb87cb.js";class u extends p{constructor(e,t,s){super(e,t,s)}getChartType(){return l.pieChartName}get widget(){return super.widget}createWidgetBuilder(e,t,s){const r=this._dxBlazorViz.dxPieChart;return function(t){s(new r(e,t))}}createWidgetSettingsConverter(){return new m}getLegendItemType(){return g.point}getChartOnPointClickHandler(){const e=this.dotNetHelper,t=this._selectionController;return s=>{const r=s.target;e.invokeMethodAsync("OnSeriesClickAsync",r.series.index,r.data,r.tag),t.selectPoint(r)}}}const j={init:function(e,t,s){return e?c(e,t,s,((e,t,s)=>new u(e,t,s))):Promise.resolve()},dispose:e,onSeriesVisibleChanged:t,render:s,exportToFile:r,exportToBase64AndGetLengthAsync:o,getBase64ImageChunk:i,clearBase64ImageData:a,resetSelection:n,showTooltipForPoint:d,hideTooltip:h};export{j as default};
