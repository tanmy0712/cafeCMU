import{_ as e}from"./_tslib-6e8ca86b.js";import{d as t}from"./dom-da46d023.js";import{k as n}from"./key-f9cbed1b.js";import{E as o}from"./eventhelper-8570b930.js";import{C as s}from"./custom-events-helper-e7f279d3.js";import{s as i}from"./constants-86572358.js";import{n as r}from"./nameof-factory-64d95f5b.js";import{DxMaskedInputEditor as a}from"./masked-input-16225991.js";import{C as l}from"./css-classes-cee8476c.js";import{n as d}from"./property-4ec0b52d.js";import"./browser-d96520d8.js";import"./common-f853e871.js";import"./text-editor-2c313fd3.js";import"./single-slot-element-base-9e7a4622.js";import"./data-qa-utils-8be7c726.js";import"./const-90026e45.js";import"./dx-ui-element-822e6c84.js";import"./lit-element-base-32a69cc0.js";import"./dx-license-dd341102.js";import"./lit-element-462e7ad3.js";import"./logicaltreehelper-7b19cc30.js";import"./layouthelper-0c7c89da.js";import"./point-e4ec110e.js";import"./constants-791d6f9b.js";import"./devices-afeafb19.js";import"./focus-utils-405a64a8.js";import"./touch-4bff3f51.js";import"./disposable-d2c2d283.js";import"./input-158e4fdf.js";import"./keyboard-navigation-strategy-940ff3b3.js";import"./focushelper-cb993bae.js";import"./dom-utils-c35907a1.js";import"./custom-element-267f9a21.js";class p extends CustomEvent{constructor(e,t){super(p.eventName,{detail:new m(e,t),bubbles:!0,composed:!0,cancelable:!0})}}p.eventName=i+".incrementValue";class m{constructor(e,t){this.Increment=e,this.PreviousValue=t}}var u,c;s.register(p.eventName,(e=>e.detail)),function(e){e.allowMouseWheel="allow-mouse-wheel",e.needExponentialView="need-exponential-view",e.decimalSeparator="decimal-separator"}(c||(c={}));const h=r();class b{}u=b,b.Prefix=l.Prefix+"-spin",b.BtnsContainer=u.Prefix+"-btns",b.IncBtn=u.Prefix+"-btn-inc",b.DecBtn=u.Prefix+"-btn-dec";class f extends a{constructor(){super(...arguments),this.regex=/^-?(\d)*$/,this.pointerDownTimer={id:-1,button:null},this.buttonObserver=new MutationObserver(this.buttonRemovedHandler.bind(this)),this.boundButtonOnPointerUpHandler=this.onButtonPointerUp.bind(this),this.allowMouseWheel=!1,this.needExponentialView=!1}get pointerDownTimerId(){return this.pointerDownTimer.id}get shouldProcessWheel(){return this.allowMouseWheel}disconnectedCallback(){this.buttonObserver.disconnect(),this.stopPointerLongTap(),super.disconnectedCallback()}connectedOrContentChanged(){super.connectedOrContentChanged(),this.buttonObserver.observe(this,{childList:!0})}onTextInput(e){if(this.isMaskDefined)return;if(!this.inputElement||!o.containsInComposedPath(e,(e=>e===this.inputElement)))return;let t=this.fieldElementValue.trim();this.decimalSeparator&&(t=t.replace(/[.|,]/g,this.decimalSeparator)),this.regex.test(t)||(t=t.replace(/[^0-9]/g,"")),t!==this.fieldElementValue&&(this.fieldElementValue=t),super.onTextInput(e)}processKeyDown(e){const t=this.getFieldElement();return!!o.containsInComposedPath(e,(e=>e===t))&&(this.isNavigationKey(e)?(o.markHandled(e),this.incrementValue(e.keyCode===n.KeyCode.Up),!0):!!super.processKeyDown(e))}processWheel(e){this.incrementValue(e.deltaY<0)}processPointerDown(e){const n=this.getButton(e);if(n&&this.inputElement){e.preventDefault(),this.useAdaptiveLayout||t.DomUtils.setFocus(this.inputElement);const o=t.DomUtils.hasClassName(n,b.IncBtn);this.incrementValue(o),this.pointerDownTimer={id:window.setTimeout(this.startPointerLongTap.bind(this),1e3,o),button:n},n.addEventListener("pointerup",this.boundButtonOnPointerUpHandler),n.addEventListener("pointerout",this.boundButtonOnPointerUpHandler)}return super.processPointerDown(e)}getButton(e){const t=e.composedPath();for(const e in t){const n=t[e];if(n&&this.hasSpinBtnClass(n))return n}return null}hasSpinBtnClass(e){return t.DomUtils.hasClassName(e,b.IncBtn)||t.DomUtils.hasClassName(e,b.DecBtn)}startPointerLongTap(e,t){this.pointerDownTimer={id:window.setInterval(this.incrementValue.bind(this),50,e),button:t}}stopPointerLongTap(){-1!==this.pointerDownTimer.id&&(clearTimeout(this.pointerDownTimer.id),this.pointerDownTimer={id:-1,button:null},this.raiseApplyValue())}onButtonPointerUp(e){let n=e.target;this.hasSpinBtnClass(n)||(n=t.DomUtils.getParentByTagName(n,"button")),this.stopPointerLongTap(),n.removeEventListener("pointerup",this.boundButtonOnPointerUpHandler),n.removeEventListener("pointerout",this.boundButtonOnPointerUpHandler)}buttonRemovedHandler(e,n){if(-1===this.pointerDownTimer.id)return;e.some((e=>Array.from(e.removedNodes).some((e=>{var n,o;return t.DomUtils.isElementNode(e)&&e.classList.contains(b.BtnsContainer)&&((null===(n=this.pointerDownTimer.button)||void 0===n?void 0:n.isEqualNode(t.DomUtils.getChildNodesByClassName(e,b.IncBtn)[0]))||(null===(o=this.pointerDownTimer.button)||void 0===o?void 0:o.isEqualNode(t.DomUtils.getChildNodesByClassName(e,b.DecBtn)[0])))}))))&&this.stopPointerLongTap()}incrementValue(e){this.dispatchEvent(new p(e,this.fieldElementValue))}isNavigationKey(e){return e.keyCode===n.KeyCode.Up||e.keyCode===n.KeyCode.Down}updated(e){super.updated(e),(e.has(h("decimalSeparator"))||e.has(h("needExponentialView")))&&this.applyRegex()}applyRegex(){this.decimalSeparator&&(this.regex=this.needExponentialView?/^-?(\d+|[,.]\d+|\d+[,.]\d+|\d+[,.]|[,.])?([eE]?[+-]?(\d)*)?$/:/^-?(\d+|[,.]\d+|\d+[,.]\d+|\d+[,.]|[,.])?$/)}shouldProcessKeyUp(e){switch(e.key){case"ArrowUp":case"ArrowDown":return this.isMaskDefined}return super.shouldProcessKeyUp(e)}}e([d({type:Boolean,attribute:c.allowMouseWheel})],f.prototype,"allowMouseWheel",void 0),e([d({type:Boolean,attribute:c.needExponentialView})],f.prototype,"needExponentialView",void 0),e([d({type:String,attribute:c.decimalSeparator})],f.prototype,"decimalSeparator",void 0),customElements.define(i,f);const w={loadModule:function(){}};export{f as DxSpinEdit,b as SpinEditCssClasses,w as default};
