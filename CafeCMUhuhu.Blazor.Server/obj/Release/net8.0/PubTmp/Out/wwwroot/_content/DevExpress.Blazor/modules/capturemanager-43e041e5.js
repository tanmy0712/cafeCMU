import{E as t}from"./eventhelper-8570b930.js";import{F as e}from"./focushelper-cb993bae.js";class n{constructor(){this.lockCount=0}get IsLocked(){return this.lockCount>0}lock(){this.lockCount+=1}unlock(){this.IsLocked&&(this.lockCount-=1)}reset(){this.lockCount=0}lockOnce(){this.IsLocked||this.lock()}doLockedAction(t){this.lock();try{t()}finally{this.unlock()}}doIfNotLocked(t){this.IsLocked||t()}doLockedActionIfNotLocked(t){this.doIfNotLocked((()=>this.doLockedAction(t)))}}class r{constructor(){this.handled=!1}}class i extends r{constructor(){super(...arguments),this.nextInteractionHandled=!1}}class s{constructor(){this._capturedElement=null,this._captureStack=[],this._globalLocker=new n,this.pointerDownHandler=this.handlePointerDown.bind(this),this.mouseClickHandler=this.handleClick.bind(this),this.pointerUpHandler=this.handlePointerUp.bind(this),this.keyDownHandler=this.handleKeyDown.bind(this),this.preventNextPointerInteraction=!1,this.restoreFocusOnPreventNextPointerInteractionElement=null,this.skipClosing=!1,this.pointedCapturedElement=null,this.wasDownOnOutsideArea=!1,document.addEventListener("pointerdown",this.pointerDownHandler,{capture:!0}),document.addEventListener("click",this.mouseClickHandler,{capture:!0}),document.addEventListener("pointerup",this.pointerUpHandler,{capture:!0}),document.addEventListener("keydown",this.keyDownHandler,{capture:!0})}get capturedInteractionLocker(){const t=this.capturedElement;return null===t?this._globalLocker:t.locker}get hasCapture(){return!!this._capturedElement}get capturedElement(){return this._capturedElement}get captureStackCount(){return this._captureStack.length}capture(t,e=!0){if(t===this.capturedElement)return!0;if(this.capturedElement&&!this.removeCapture(this.capturedElement,t))return!1;return this.createCapture(this._capturedElement,t,e)}releaseCapture(t){var e;if(this.capturedElement!==t)return this._captureStack=this._captureStack.filter((e=>e!==t)),!0;const n=null!==(e=this._captureStack.pop())&&void 0!==e?e:null;return this.capture(n,!1)}removeCapture(t,e){return t.lostCapture(),!0}createCapture(t,e,n){return e?(t&&n&&this._captureStack.push(t),this._capturedElement=e,e.gotCapture(),this._captureStack=this._captureStack.filter((t=>t!==e)),!0):(this._capturedElement=null,this.pointedCapturedElement=null,!0)}async handlePointerUp(e){const n=this.capturedInteractionLocker;if(this.pointedCapturedElement&&!this.skipClosing&&this.wasDownOnOutsideArea)try{n.lock();const r=new i;this.capturedProcessPromise=this.pointedCapturedElement.processCapturedPointerDownAsync(e,r),await this.capturedProcessPromise,this.capturedProcessPromise=void 0,this.preventNextPointerInteraction=r.handled&&r.nextInteractionHandled,this.preventNextPointerInteraction&&t.markHandled(e,!1)}finally{n.unlock()}if(this.capturedInteractionLocker.IsLocked)t.markHandled(e,!1);else{if(this.preventNextPointerInteraction)return this.restoreFocusOnPreventNextPointerInteractionElement=document.activeElement,void t.markHandled(e,!1);this.skipClosing=!1,this.wasDownOnOutsideArea=!1}}async handleClick(n){if(this.capturedProcessPromise&&await this.capturedProcessPromise,this.capturedInteractionLocker.IsLocked)t.markHandled(n,!1);else if(this.preventNextPointerInteraction){if(this.preventNextPointerInteraction=!1,t.markHandled(n,!1),this.restoreFocusOnPreventNextPointerInteractionElement&&e.isFocused(this.restoreFocusOnPreventNextPointerInteractionElement))return;e.unfocus()}}async handlePointerDown(t){this.capturedInteractionLocker.IsLocked||(this.preventNextPointerInteraction=!1,this.pointedCapturedElement=this.capturedElement,this.skipClosing=null===this.capturedElement,this.wasDownOnOutsideArea=!0)}async handleKeyDown(t){var e;if(!this.hasCapture)return;const n=this.capturedInteractionLocker;if(!n.IsLocked)try{n.lock();const i=new r;await(null===(e=this.capturedElement)||void 0===e?void 0:e.processCapturedKeyDownAsync(t,i))}finally{n.unlock()}}hasCapturedElementForTests(){return this.hasCapture}getCapturedElementForTests(){return this.capturedElement}}function o(){return a}const a=new s,c=Object.freeze({__proto__:null,CaptureInteractionOptions:r,PointerCaptureInteractionOptions:i,CaptureManager:s,getCaptureManagerSingletonForTests:o,captureManagerSingleton:a,default:{CaptureManager:s,captureManagerSingleton:a,getCaptureManagerSingletonForTests:o}});export{n as L,c as a,a as c};
